<?php
/**
 * @file
 * Handles the storage of cookies and campaign origins.
 */

/**
 * Implements of hook_help().
 */
function campaign_origins_help($path, $arg) {
  switch ($path) {
    case 'admin/help#campaign_origins':
      $output = t('<p></p>
                  <h2>Settings</h2>
                  <p></p>');
      return $output;
  }
}

/**
 * Implements of hook_perm().
 */
function campaign_origins_perm() {
  return array('administer campaign origins', 'add campaign origins', 'view campaign origins', 'view campaign origins report', 'track with campaign origins');
}

/**
 * Implements of hook_init().
 */
function campaign_origins_init() {
  if (user_access('track with campaign origins')) {
    if (isset($_GET['origin']) && !empty($_GET['origin'])) {
      $origin_code = trim(strip_tags($_GET['origin']));
      campaign_origins_set_cookie($origin_code);
    }
  }
}

/**
 * Implements of hook_menu().
 */
function campaign_origins_menu() {
  $items['admin/settings/campaign-origins'] = array(
    'title' => 'Campaign Origins Settings',
    'description' => 'Modify settings for Campaign Origins.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('campaign_origins_admin_settings'),
    'access arguments' => array('administer campaign origins'),
    'file' => 'campaign_origins.admin.inc',
    'weight' => 5,
  );
  $items['admin/settings/campaign-origins/expiration'] = array(
    'title' => 'Campaign Origins Expiration',
    'description' => 'Modify cookie expiration.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 10,
  );
  $items['admin/settings/campaign-origins/add-campaign-origins'] = array(
    'title' => 'Add Campaign Origin',
    'description' => 'Add new origin code.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('campaign_origins_admin_add_origin'),
    'access callback' => 'user_access',
    'access arguments' => array('add campaign origins'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'campaign_origins.admin.inc',
    'weight' => 15,
  );
  $items['admin/settings/campaign-origins/view-campaign-origins'] = array(
    'title' => 'View Campaign Origins',
    'description' => 'View campaign origins.',
    'page callback' => 'campaign_origins_view_origins',
    'access callback' => 'user_access',
    'access arguments' => array('view campaign origins'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'campaign_origins.admin.inc',
    'weight' => 20,
  );
  $items['admin/reports/campaign-origins'] = array(
		'title' => 'Campaign Origins',
		'description' => 'View campaign origins report.',
		'page callback' => 'campaign_origins_show_origin_report',
		'access callback' => 'user_access',
		'access arguments' => array('view campaign origins report'),
		'type' => MENU_NORMAL_ITEM,
		'file' => 'campaign_origins.admin.inc',
		'weight' => 5,
	);

  return $items;
}

/**
 * Sets/appends a new origin code to the cookie.
 *
 * @param string $origin_code
 *   A string containing an origin code.
 */
function campaign_origins_set_cookie($origin_code) {
  // Get existing tracking information stored in cookie.
  $existing_tracking = isset($_COOKIE['campaign_origins']) ? $_COOKIE['campaign_origins']:'';

  // Load the Node object.
  $node_id = 0;
  if (arg(0) == 'node' && is_numeric(arg(1))) {
    $node = node_load(arg(1));
    $node_id = isset($node->nid) ? $node->nid:0;
  }
  // Get the time landed on the page.
  $time_in = time();

  // Create a string with origin data tokens.
  $origin_tracking = implode(',', array($origin_code, $node_id, $time_in));

  // Destroy the cookie.
  setcookie('campaign_origins', '', time() - 3600, '/', $_SERVER['SERVER_NAME']);

  // Get Expiration in days.
  $expiration = (time() + 60 * 60 * 24 * variable_get('campaign_origins_expiration', 7));

  // Set a new cookie with additional origin code.
  setcookie('campaign_origins', $origin_tracking, $expiration, '/', $_SERVER['SERVER_NAME']);

  // Make the cookie data available to other functions immediately 
  // (instead of next page load).
  $_COOKIE['campaign_origins'] = $origin_tracking;
}

/**
 * Stores origin codes when a new conversion has been made.
 */
function campaign_origins_save_origin($form_name = '', $form_record_id = '') {
  $origin_tracking = isset($_COOKIE['campaign_origins']) ? $_COOKIE['campaign_origins']:'';
  if ($origin_tracking) {
    $origin_fields = explode(',', $origin_tracking); 
    $origin_code_id = db_result(db_query("SELECT id FROM {campaign_origins} WHERE origin = '%s'", $origin_fields[0]));    
    db_query("INSERT INTO {campaign_origins_tracking} 
    					(campaign_origins_id, node_id, form_name, form_record_id, created) 
    					VALUES (%d, %d, '%s', %d, %d)", $origin_code_id, $origin_fields[1], $form_name, $form_record_id, $origin_fields[2]);
  }
}
